name: Create a tagged release
on:
  workflow_dispatch:
    inputs:
      'Tagged:
        description: 'Create a tagged release'
        required: true
        default: false
        type: boolean'
      Release:
        description: 'Choose release type'
        type: choice
        required: true
        default: minor
        options:
        - major
        - minor
        - patch
jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.Tagged == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git fetch --tags
      - name: Set version
        continue-on-error: false
        id: bumpversion
        run: |
         pip install bumpversion
         DOCKER_IMAGE=ghcr.io/${{ github.repository }}
         if [ "${{ github.event.inputs.Release}}" == "major" ]; then
          bumpversion major
          VERSION=$(cat VERSION)
         fi
         TAGS="${DOCKER_IMAGE}:${VERSION}"
         echo ::set-output name=tag::${TAGS}
         echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
         DOCKER_IMAGE=ghcr.io/${{ github.repository }}
         if [ "${{ github.event.inputs.Release}}" == "minor" ]; then
          bumpversion minor
          VERSION=$(cat VERSION)
         fi
         TAGS="${DOCKER_IMAGE}:${VERSION}"
         echo ::set-output name=tag::${TAGS}
         echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
         DOCKER_IMAGE=ghcr.io/${{ github.repository }}
         if [ "${{ github.event.inputs.Release}}" == "patch" ]; then
          bumpversion patch
          VERSION=$(cat VERSION)
         fi
         TAGS="${DOCKER_IMAGE}:${VERSION}"
         echo ::set-output name=tag::${TAGS}
         echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Push tags
        run: |
          git push --follow-tags
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Distribution Image and push to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          context: ./docker/.
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.sha_short }}
            ${{ steps.bumpversion.outputs.tag }}
            ghcr.io/${{ github.repository }}:latest
            ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.created=${{ steps.bumpversion.outputs.created }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.version=${{ steps.bumpversion.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            ${{ steps.meta.outputs.labels }}
          push: true

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
